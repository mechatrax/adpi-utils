#!/bin/bash

DEFAULT_DEVICE_NAME=adpipro
DEFAULT_IIO_NAME=iio:device0
DEFAULT_CONFIG_FILE=/etc/adpi.conf

LIB_PATH=/usr/lib/adpi-utils/

VERSION="2.0"

GET_USAGE="get {frequency|gain|output <CH>|scale|temperature|voltage <CH>}"

SET_USAGE="set {frequency|gain|output <CH>|scale} <VALUE>"

USAGE="
Usage: adpictl [OPTION] COMMAND ...

Commands:
    ${GET_USAGE}
    ${SET_USAGE}
    help                        display help and exit
    version                     display version and exit
    
Options:
    --config, -c <FILE>         read config from FILE
    --spi, -s <DEVICE_NUMBER>   specify device number by SPI
    --iio, -i <DEVICE_NUMBER>   specify device number by IIO (When using IIO)
"

ARGS=($@)

DEVICE_NAME=$DEFAULT_DEVICE_NAME
SPI_NAME=
IIO_NAME=$DEFAULT_IIO_NAME
CONFIG_FILE=$DEFAULT_CONFIG_FILE
INDEX_OFFSET=-1

#
# Usage: show_help [ get | set ]
#
show_help ()
{
  case $1 in
    get)
      echo "Get command usage:"
      echo "    $GET_USAGE"
      ;;
    set)
      echo "Set command usage:"
      echo "    $SET_USAGE"
      ;;
    *)
      echo "$USAGE"
      ;;
  esac
}

#
# Usage: search_spidev <config file>
#
search_spidev ()
{
  for spidev in $(sed -nr 's/^\[(spi*.*)\].*/\1/p' $1)
  do
    for param in $(${LIB_PATH}/parse_parameters.sh $spidev $1)
    do
      if [[ "$param" =~ device=(.+) ]]
      then
        echo $spidev
      fi
    done
  done
}

#
# parse options
#
for ((i=0; i<${#ARGS[@]}; i++))
do
  case ${ARGS[$i]} in
    -c|--config)
      CONFIG_FILE=${ARGS[$(($i + 1))]}
      ;;
    -s|--spi)
      SPI_NAME=spi0.${ARGS[$(($i + 1))]}
      ;;
    -i|--iio)
      IIO_NAME=iio:device${ARGS[$(($i + 1))]}
      ;;
    *)
      ;;
  esac
done

if [ "$SPI_NAME" == "" ]
then
  SPI_NAME=$(search_spidev $CONFIG_FILE)
fi

#
# parse config
#
for param in $(${LIB_PATH}/parse_parameters.sh $SPI_NAME $CONFIG_FILE)
do
  case $param in
  device*)
    DEVICE_NAME=$(echo $param | cut -d= -f2)
    ;;
  eeprom*)
    EEPROM_NAME=1-00$(echo $param | cut -d= -f2 | sed -e 's/^0x//')
    ;;
  gpio*)
    GPIO_NAME=1-00$(echo $param | cut -d= -f2 | sed -e 's/^0x//')
    ;;
  *)
    ;;
  esac
done

#
# execute funcion
#
for ((i=0; i<${#ARGS[@]}; i++))
do
  case ${ARGS[$i]} in
    get|set)
      ${LIB_PATH}/adpi-utils-backend "device=$DEVICE_NAME" \
        "adc=$SPI_NAME" "eeprom=$EEPROM_NAME" "gpio=$GPIO_NAME" ${ARGS[@]:$i} 
      status=$?
      if [ $status -eq 2 ]
      then
        show_help ${ARGS[$i]}
        exit 2
      fi
      break
      ;;
    help)
      show_help
      exit 0
      ;;
    version)
      echo "adpictl $VERSION"
      exit 0
      ;;
    *)
      ;;
  esac
done

if [ -z $status ]
then
  show_help
  exit 2
elif [ $status -ne 0 ]
then
  echo "Command failure" >&2
fi

exit $status

